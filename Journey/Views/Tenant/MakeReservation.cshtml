@using Journey.Entities
@model Reservation
@{
    ViewData["Title"] = "Make reservation";
}
<h1>Tenant page</h1>
<form method="post">
    <input type="hidden" asp-for="PlaceId" />
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary">
                @ViewData["Title"]
            </h2>
            <hr />
        </div>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="mb-3">
            <label asp-for="ArrivalDate"></label>
            <input asp-for="ArrivalDate"
                   min="@Model.ArrivalDate.ToString("yyyy-MM-dd")"
                   max="@Model.ArrivalDate.AddDays(Model.MaxDurationDays).ToString("yyyy-MM-dd")"
                   class="form-control" />
            <span asp-validation-for="ArrivalDate" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="DepartureDate"></label>
            <input asp-for="DepartureDate"
                   min="@Model.DepartureDate.ToString("yyyy-MM-dd")"
                   max="@Model.DepartureDate.AddDays(Model.MaxDurationDays).ToString("yyyy-MM-dd")"
                   class="form-control" />
            <span asp-validation-for="DepartureDate" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary" style="width:150px">
            Create
        </button>
        <a asp-controller="Home" asp-action="Index" class="btn btn-secondary" style="width:150px">
            Back to List
        </a>
    </div>
</form>
@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script>
        let date = new Date();

        function toFormat(date) {
            var year = date.getFullYear();
            var month = date.getMonth() + 1;
            var day = date.getDate();
            month = month / 10 >= 1 ? month.toString() : `0${month}`;
            day = date.getDate() / 10 >= 1 ? date.getDate().toString() : `0${date.getDate()}`;
            return `${year}-${month}-${day}`;
        }
        date.setDate(date.getDate() + 1);
        document.getElementById("ArrivalDate").min = toFormat(date)
        document.getElementById("ArrivalDate").value = toFormat(date)
        date.setDate(date.getDate() + 1);
        document.getElementById("DepartureDate").min = toFormat(date)
        document.getElementById("DepartureDate").value = toFormat(date)

        document.getElementById("ArrivalDate").onchange = function() {
            let currentDate = new Date(document.getElementById("ArrivalDate").value)
            currentDate.setDate(currentDate.getDate() + 1);
            document.getElementById("DepartureDate").min = toFormat(currentDate)
            document.getElementById("DepartureDate").value = toFormat(currentDate)
        }
    </script>
}

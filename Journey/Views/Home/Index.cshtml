@using Journey.Entities
@using Journey.ViewModels
@using Microsoft.AspNetCore.Identity
@model IndexViewModel<Place>
@inject SignInManager<IdentityUser> SignInManager
@{
    ViewData["Title"] = "LandLord page";
}
<div class="d-flex justify-content-center">
    <form action="" action="/action_page.php" method="get"
          class="row d-flex flex-wrap align-items-center justify-content-center mb-4 bg-light"
          style="border-radius: 10px;">
        <div class="col-auto me-auto">
            <label for="selectCity" class="form-label text-muted fw-bold"
                   style="height: 12px; font-size:12px;">Location</label>
            <select class="form-select bg-light" aria-label="Default select example" id="selectedCity" name="selectedCity"
                    style="font-size:15px; border: none; padding-top: 0;">
                <option value="0">All</option>
                @foreach (var item in Model.Cities)
                {
                    if (Model.Params["SelectedCity"] == @item.Key.ToString())
                    {
                        <option value="@item.Key" selected>@item.Value</option>
                    }
                    else
                    {
                        <option value="@item.Key">@item.Value</option>
                    }
                }
            </select>
        </div>
        <div class="col-auto d-flex me-auto"
             style="border-left: 1px solid gainsboro; border-right: 1px solid gainsboro">
            <div class="me-1">
                <label for="exampleFormControlInput1" class="form-label text-muted fw-bold"
                       style="height: 12px; font-size:12px">Check in</label>
                <input type="date" class="form-control bg-light" id="ArrivalDate" name="arrivalDate"
                       value="@Model.Params["ArrivalDate"]"
                       style="font-size:15px; border: none; padding-top: 0;">
            </div>
            <div>
                <label for="exampleFormControlInput2" class="form-label text-muted fw-bold"
                       style="height: 12px; font-size:12px">Check out</label>
                <input type="date" class="form-control bg-light" id="DepartureDate" name="departureDate"
                       value="@Model.Params["DepartureDate"]"
                       style="font-size:15px; border: none; padding-top: 0;">
            </div>
        </div>
        <div class="col-auto me-auto">
            <label for="abode" class="form-label text-muted fw-bold"
                   style="height: 12px; font-size:12px">Abode</label>
            <select class="form-select bg-light" aria-label="Default select example" id="selectedType" name="selectedType"
                    style="font-size:15px; border: none; padding-top: 0;">
                <option value="0">All</option>
                @foreach (var item in Model.Types)
                {

                    if (Model.Params["SelectedType"] == @item.Key.ToString())
                    {
                        <option value="@item.Key" selected>@item.Value</option>
                    }
                    else
                    {
                        <option value="@item.Key">@item.Value</option>
                    }
                }

            </select>
        </div>
        <div class="col-auto me-auto">
            <label class="form-label text-muted fw-bold" style="height: 10px; font-size:10px"></label>
            <button type="submit" class="bg-dark text-light py-2 px-5"
                    style="border-radius: 5px; font-size: 15; ">
                Search
            </button>
        </div>
    </form>
</div>
<div class="d-flex justify-content-start align-content-around">
    <form asp-action="Index" method="get">
        <input type="hidden" name="sortOrder" value="@Model.Params["CurrentSort"]" />
        <input type="hidden" name="pageNumber" value="@Model.PaginatedList.PageIndex" />
        <input type="hidden" name="selectedCity" value="@Model.Params["SelectedCity"]" />
        <input type="hidden" name="selectedType" value="@Model.Params["SelectedType"]" />
        <input type="hidden" name="arrivalDate" value="@Model.Params["ArrivalDate"]" />
        <input type="hidden" name="departureDate" value="@Model.Params["DepartureDate"]" />
        <div class="form-actions no-color">
            <p>
                Find by name: <input type="text" name="SearchString" value="@Model.Params["CurrentFilter"]"
                                     class="form-control" style="width:300px; display:inline-block;" />
            </p>
        </div>
    </form>
    <div class="ms-3">
        <div class="dropdown">
            <a class="btn btn-dark dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                Sort By:
            </a>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                <li>
                    <a class="dropdown-item"
                       asp-action="Index"
                       asp-route-sortOrder="@Model.Params["PriceSortParm"]"
                       asp-route-currentFilter="@Model.Params["CurrentFilter"]"
                       asp-route-pageNumber="@Model.PaginatedList.PageIndex"
                       asp-route-selectedCity="@Model.Params["SelectedCity"]"
                       asp-route-selectedType="@Model.Params["SelectedType"]">Price</a>
                </li>
                <li>
                    <a class="dropdown-item"
                       asp-action="Index"
                       asp-route-sortOrder="@Model.Params["RankSortParm"]"
                       asp-route-currentFilter="@Model.Params["CurrentFilter"]"
                       asp-route-pageNumber="@Model.PaginatedList.PageIndex"
                       asp-route-selectedCity="@Model.Params["SelectedCity"]"
                       asp-route-selectedType="@Model.Params["SelectedType"]">Rank</a>
                </li>
                <li>
                    <a class="dropdown-item"
                       asp-action="Index"
                       asp-route-sortOrder="@Model.Params["NewestSortParm"]"
                       asp-route-currentFilter="@Model.Params["CurrentFilter"]"
                       asp-route-pageNumber="@Model.PaginatedList.PageIndex"
                       asp-route-selectedCity="@Model.Params["SelectedCity"]"
                       asp-route-selectedType="@Model.Params["SelectedType"]">Newest</a>
                </li>
            </ul>
        </div>
    </div>
</div>
<h2>Places</h2>
<table class="table">
    <thead>
        <tr>
            <th>
                PlaceName
            </th>
            <th>
                LandLord
            </th>
            <th>
                PricePerNight
            </th>
            <th>
                Rank
            </th>
            <th>
                City
            </th>
            <th>
                Address
            </th>
            <th>
                Type
            </th>
            <th>
                CreatedAt
            </th>
            @if (SignInManager.IsSignedIn(User) && User.IsInRole("Tenant"))
            {
                <th>Action</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PaginatedList)
        {
            <tr>
                <td><a asp-controller="Home" asp-action="Details" asp-route-id="@item.Id">@item.PlaceName</a></td>
                <td>@item.Account!.UserName</td>
                <td>@item.PricePerNight</td>
                <td>@item.Rank</td>
                <td>@item.City!.CityName</td>
                <td>@item.Address</td>
                <td>@item.PlaceType!.TypeName</td>
                <td>@item.CreatedAt</td>
                @if (SignInManager.IsSignedIn(User) && User.IsInRole("Tenant"))
                {
                    <td>
                        <a class="btn btn-dark" asp-controller="Tenant" asp-action="MakeReservation"
                   asp-route-placeId="@item.Id">
                            Make Reservation
                        </a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.PaginatedList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PaginatedList.HasNextPage ? "disabled" : "";
}
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item">
            <a asp-action="Index"
               asp-route-sortOrder="@Model.Params["CurrentSort"]"
               asp-route-pageNumber="@(Model.PaginatedList.PageIndex - 1)"
               asp-route-currentFilter="@Model.Params["CurrentFilter"]"
               asp-route-selectedCity="@Model.Params["SelectedCity"]"
               asp-route-selectedType="@Model.Params["SelectedType"]"
               class="btn btn-default @prevDisabled">
                Previous
            </a>
        </li>
        @for (int i = 1; i <= Model.PaginatedList.TotalPages; i++)
        {
            <li class="page-item">
                <a asp-action="Index"
               asp-route-sortOrder="@Model.Params["CurrentSort"]"
               asp-route-pageNumber="@i"
               asp-route-currentFilter="@Model.Params["CurrentFilter"]"
               asp-route-selectedCity="@Model.Params["SelectedCity"]"
               asp-route-selectedType="@Model.Params["SelectedType"]"
               class="page-link">@i</a>
            </li>
        }
        <li class="page-item">
            <a asp-action="Index"
               asp-route-sortOrder="@Model.Params["CurrentSort"]"
               asp-route-pageNumber="@(Model.PaginatedList.PageIndex + 1)"
               asp-route-currentFilter="@Model.Params["CurrentFilter"]"
               asp-route-selectedCity="@Model.Params["SelectedCity"]"
               asp-route-selectedType="@Model.Params["SelectedType"]"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </li>
    </ul>
</nav>
@section Scripts{
    <script>

        function toFormat(date) {
            var year = date.getFullYear();
            var month = date.getMonth() + 1;
            var day = date.getDate();
            month = month / 10 >= 1 ? month.toString() : `0${month}`;
            day = date.getDate() / 10 >= 1 ? date.getDate().toString() : `0${date.getDate()}`;
            return `${year}-${month}-${day}`;
        }

        let date = new Date();

        date.setDate(date.getDate() + 1);
        document.getElementById("ArrivalDate").min = toFormat(date)

        date.setDate(date.getDate() + 1);
        document.getElementById("DepartureDate").min = toFormat(date)

        document.getElementById("ArrivalDate").onchange = function() {
            let currentDate = new Date(document.getElementById("ArrivalDate").value)
            currentDate.setDate(currentDate.getDate() + 1);
            document.getElementById("DepartureDate").min = toFormat(currentDate)
            document.getElementById("DepartureDate").value = toFormat(currentDate)
        }
    </script>
}
// <auto-generated />
using System;
using Journey.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Journey.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220523145626_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Journey.Entities.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("PlaceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlaceName")
                        .IsUnique();

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 5, 23, 17, 56, 26, 714, DateTimeKind.Local).AddTicks(9660),
                            Description = "Aspernatur commodi ab quia hic adipisci commodi.",
                            PlaceName = "Apartment on Kamyanetskaya street",
                            UpdatedAt = new DateTime(2022, 5, 23, 17, 56, 26, 714, DateTimeKind.Local).AddTicks(9689)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(636),
                            Description = "Eligendi dicta sit eveniet reprehenderit sit et.",
                            PlaceName = "Avto Spa",
                            UpdatedAt = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(639)
                        });
                });

            modelBuilder.Entity("Journey.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsArrived")
                        .HasColumnType("bit");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalDate = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1403),
                            CreatedAt = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1397),
                            DepartureDate = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1404),
                            IsArrived = false,
                            PlaceId = 1,
                            UpdatedAt = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1401)
                        },
                        new
                        {
                            Id = 2,
                            ArrivalDate = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1410),
                            CreatedAt = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1406),
                            DepartureDate = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1411),
                            IsArrived = false,
                            PlaceId = 1,
                            UpdatedAt = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1408)
                        },
                        new
                        {
                            Id = 3,
                            ArrivalDate = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1416),
                            CreatedAt = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1413),
                            DepartureDate = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1417),
                            IsArrived = false,
                            PlaceId = 2,
                            UpdatedAt = new DateTime(2022, 5, 23, 17, 56, 26, 715, DateTimeKind.Local).AddTicks(1414)
                        });
                });

            modelBuilder.Entity("Journey.Entities.Reservation", b =>
                {
                    b.HasOne("Journey.Entities.Place", "Place")
                        .WithMany("Reservations")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("Journey.Entities.Place", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
